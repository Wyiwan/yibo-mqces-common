<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yibo.boot.modules.base.dao.MessageSendDao">
    <!-- 在这里存放用户自定义的映射配置（注：MessagePushDAO.xml里各节点的ID不能在这里重复出现）  -->
    <!-- 扩展分页查询 -->
    <select id="queryPageExt" parameterType="java.util.Map" resultType="cn.yibo.boot.modules.base.entity.MessageSend">
        select
            p.id,
            p.message_id,
            m.message_title,
            p.user_id,
            u.name username,
            o.organ_name,
            p.status,
            p.create_by,
            p.create_date,
            p.update_by,
            p.update_date
        from sys_message_send p
        inner join sys_message m on m.id = p.message_id
        left join sys_user u on u.id = p.user_id
        left join sys_organ o on o.id = u.tenant_id
        <where>
            and p.status != 0
            and p.message_id = #{condition.messageId}
            <if test="condition.userId != null">
                and p.user_id = #{condition.userId}
            </if>
            <if test="condition.username != null">
                and u.name like concat('%', #{condition.username} , '%')
            </if>
            <if test="condition.organId != null">
                and o.id = #{condition.organId}
            </if>
            <if test="condition.status != null">
                and p.status = #{condition.status}
            </if>
        </where>
        <choose>
            <when test="condition.sort != null">
                order by ${condition.orderby}
            </when>
            <otherwise>
                order by p.status, p.update_date desc
            </otherwise>
        </choose>
    </select>

    <!-- 批量新增 -->
    <insert id="batchInsert" parameterType="cn.yibo.boot.modules.base.entity.MessageSend">
        insert into sys_message_send(
            id,
            message_id,
            user_id,
            status,
            create_by,
            create_date,
            update_by,
            update_date
        )values
        <foreach collection="list" item="item" index="index" separator="," >
        (
            (select replace(UUID(), '-', '') as id),
            #{item.messageId,jdbcType=VARCHAR},
            #{item.userId,jdbcType=VARCHAR},
            #{item.status,jdbcType=INTEGER},
            #{item.createBy,jdbcType=VARCHAR},
            #{item.createDate,jdbcType=TIMESTAMP},
            #{item.updateBy,jdbcType=VARCHAR},
            #{item.updateDate,jdbcType=TIMESTAMP}
        )
        </foreach>
    </insert>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yibo.modules.base.dao.PermissionDao">
    <!-- 在这里存放用户自定义的映射配置（注：PermissionDAO.xml里各节点的ID不能在这里重复出现）  -->
    <sql id="Base_Column_List_Ext">
        p.id,
        p.parent_id,
        p.ancestor_id,
        p.perms_name,
        p.perms_type,
        p.perms_url,
        p.perms_href,
        p.perms_sort,
        p.perms_icon,
        p.perms_level,
        p.perms_weight,
        p.button_type,
        p.status
    </sql>

    <!-- 根据权重查询权限 -->
    <select id="findByWeight" resultType="com.yibo.modules.base.entity.Permission">
        select
            <include refid="Base_Column_List_Ext" />
        from sys_permission p
        where 1 = 1
        <if test="minWeight != null and minWeight !=''">
            and p.perms_weight >= #{minWeight}
        </if>
        <if test="maxWeight != null and maxWeight !=''">
            and #{maxWeight} > p.perms_weight
        </if>
        <if test="type != null and type !=''">
            and p.perms_type = #{type}
        </if>
        and p.status = 1
        order by p.perms_sort asc
    </select>

    <!-- 根据用户ID查询权限 -->
    <select id="findByUserId" resultType="com.yibo.modules.base.entity.Permission">
        select distinct
            <include refid="Base_Column_List_Ext" />
        from sys_user u
        inner join sys_user_role m on u.id = m.user_id
        inner join sys_role r on r.id = m.role_id and r.status = 1
        inner join sys_role_permission n on m.role_id = n.role_id
        inner join sys_permission p on p.id = n.permission_id and p.status = 1
        <where>
            and u.id = #{userId}
            and u.status = 1
            <if test="type != null and type !=''">
                and p.perms_type = #{type}
            </if>
        </where>
        order by p.perms_sort asc
    </select>

    <!-- 根据角色ID查询权限 -->
    <select id="findByRoleId" resultType="com.yibo.modules.base.entity.Permission">
        select distinct
            <include refid="Base_Column_List_Ext" />
        from sys_role r
        inner join sys_role_permission n on n.role_id = r.id
        inner join sys_permission p on p.id = n.permission_id and p.status = 1
        <where>
            and r.id = #{roleId}
            and r.status = 1
        </where>
        order by p.perms_sort asc
    </select>

    <!-- 查询树结构数据 -->
    <select id="findTree" resultType="com.yibo.modules.base.entity.Permission">
        select
            <include refid="Base_Column_List_Ext" />
        from sys_permission p
        where 1 = 1
          and p.status = 1
        order by p.perms_sort
    </select>

    <!-- 调用存储过程更新祖先ID字段 -->
    <select id="updateAncestor" parameterType="com.yibo.modules.base.entity.Permission" statementType="CALLABLE" resultType="java.util.Map">
	    {call sp_deal_perms_ancestor(#{id,jdbcType=VARCHAR,mode=IN})}
    </select>

    <!-- 唯一性校验 -->
    <select id="count" resultType="java.lang.Integer">
        select count(1) from sys_permission
        where 1 = 1
            <if test="condition.permsName != null">
                and perms_name = #{condition.permsName,jdbcType=VARCHAR}
            </if>
            <if test="condition.permsUrl != null">
                and perms_url = #{condition.permsUrl,jdbcType=VARCHAR}
            </if>
            <if test="condition.id != null and condition.id.length() > 0">
                and id not in(select #{condition.id})
            </if>
            and status = 1
    </select>

    <!-- 级联删除 -->
    <update id="deleteCascade">
        <foreach collection="list" item="id">
            update sys_permission set status = 0 where ancestor_id like concat('%', #{id} , '%');
        </foreach>
    </update>
</mapper>